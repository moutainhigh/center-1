<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmall.dborm.txmapper.PcProductpicMapper">
  <resultMap id="BaseResultMap" type="com.cmall.dborm.txmodel.PcProductpic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="zid" jdbcType="INTEGER" property="zid" />
    <result column="uid" jdbcType="CHAR" property="uid" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="product_code_old" jdbcType="VARCHAR" property="productCodeOld" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    zid, uid, product_code, sku_code, pic_url, product_code_old
  </sql>
  <select id="selectByExample" parameterType="com.cmall.dborm.txmodel.PcProductpicExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pc_productpic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from pc_productpic
    where zid = #{zid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pc_productpic
    where zid = #{zid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cmall.dborm.txmodel.PcProductpicExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pc_productpic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cmall.dborm.txmodel.PcProductpic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pc_productpic (zid, uid, product_code, 
      sku_code, pic_url, product_code_old
      )
    values (#{zid,jdbcType=INTEGER}, #{uid,jdbcType=CHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{skuCode,jdbcType=VARCHAR}, #{picUrl,jdbcType=VARCHAR}, #{productCodeOld,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cmall.dborm.txmodel.PcProductpic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pc_productpic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        zid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="productCodeOld != null">
        product_code_old,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        #{zid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="productCodeOld != null">
        #{productCodeOld,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cmall.dborm.txmodel.PcProductpicExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from pc_productpic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_productpic
    <set>
      <if test="record.zid != null">
        zid = #{record.zid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=CHAR},
      </if>
      <if test="record.productCode != null">
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.skuCode != null">
        sku_code = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.productCodeOld != null">
        product_code_old = #{record.productCodeOld,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_productpic
    set zid = #{record.zid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=CHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      sku_code = #{record.skuCode,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      product_code_old = #{record.productCodeOld,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmall.dborm.txmodel.PcProductpic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_productpic
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=CHAR},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="productCodeOld != null">
        product_code_old = #{productCodeOld,jdbcType=VARCHAR},
      </if>
    </set>
    where zid = #{zid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmall.dborm.txmodel.PcProductpic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_productpic
    set uid = #{uid,jdbcType=CHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      sku_code = #{skuCode,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      product_code_old = #{productCodeOld,jdbcType=VARCHAR}
    where zid = #{zid,jdbcType=INTEGER}
  </update>
</mapper>