<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmall.dborm.txmapper.groupcenter.GcPayOrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="zid" jdbcType="INTEGER" property="zid" />
    <result column="uid" jdbcType="CHAR" property="uid" />
    <result column="pay_order_code" jdbcType="VARCHAR" property="payOrderCode" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="member_code" jdbcType="VARCHAR" property="memberCode" />
    <result column="pay_money" jdbcType="DECIMAL" property="payMoney" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
    <result column="withdraw_money" jdbcType="DECIMAL" property="withdrawMoney" />
    <result column="tax_money" jdbcType="DECIMAL" property="taxMoney" />
    <result column="total_tax_money" jdbcType="DECIMAL" property="totalTaxMoney" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="card_code" jdbcType="VARCHAR" property="cardCode" />
    <result column="fee_money" jdbcType="DECIMAL" property="feeMoney" />
    <result column="before_withdraw_money" jdbcType="DECIMAL" property="beforeWithdrawMoney" />
    <result column="after_withdraw_money" jdbcType="DECIMAL" property="afterWithdrawMoney" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="audit_time" jdbcType="CHAR" property="auditTime" />
    <result column="certificate_type" jdbcType="VARCHAR" property="certificateType" />
    <result column="certificate_no" jdbcType="VARCHAR" property="certificateNo" />
    <result column="ld_code" jdbcType="VARCHAR" property="ldCode" />
    <result column="ld_name" jdbcType="VARCHAR" property="ldName" />
    <result column="after_tax_money" jdbcType="DECIMAL" property="afterTaxMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    zid, uid, pay_order_code, account_code, member_code, pay_money, order_status, pay_status, 
    withdraw_money, tax_money, total_tax_money, create_time, remark, member_name, card_code, 
    fee_money, before_withdraw_money, after_withdraw_money, bank_name, bank_code, audit_time, 
    certificate_type, certificate_no, ld_code, ld_name, after_tax_money
  </sql>
  <select id="selectByExample" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gc_pay_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from gc_pay_order_info
    where zid = #{zid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gc_pay_order_info
    where zid = #{zid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gc_pay_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gc_pay_order_info (zid, uid, pay_order_code, 
      account_code, member_code, pay_money, 
      order_status, pay_status, withdraw_money, 
      tax_money, total_tax_money, create_time, 
      remark, member_name, card_code, 
      fee_money, before_withdraw_money, after_withdraw_money, 
      bank_name, bank_code, audit_time, 
      certificate_type, certificate_no, ld_code, 
      ld_name, after_tax_money)
    values (#{zid,jdbcType=INTEGER}, #{uid,jdbcType=CHAR}, #{payOrderCode,jdbcType=VARCHAR}, 
      #{accountCode,jdbcType=VARCHAR}, #{memberCode,jdbcType=VARCHAR}, #{payMoney,jdbcType=DECIMAL}, 
      #{orderStatus,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, #{withdrawMoney,jdbcType=DECIMAL}, 
      #{taxMoney,jdbcType=DECIMAL}, #{totalTaxMoney,jdbcType=DECIMAL}, #{createTime,jdbcType=CHAR}, 
      #{remark,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, #{cardCode,jdbcType=VARCHAR}, 
      #{feeMoney,jdbcType=DECIMAL}, #{beforeWithdrawMoney,jdbcType=DECIMAL}, #{afterWithdrawMoney,jdbcType=DECIMAL}, 
      #{bankName,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{auditTime,jdbcType=CHAR}, 
      #{certificateType,jdbcType=VARCHAR}, #{certificateNo,jdbcType=VARCHAR}, #{ldCode,jdbcType=VARCHAR}, 
      #{ldName,jdbcType=VARCHAR}, #{afterTaxMoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gc_pay_order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        zid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="payOrderCode != null">
        pay_order_code,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="memberCode != null">
        member_code,
      </if>
      <if test="payMoney != null">
        pay_money,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="withdrawMoney != null">
        withdraw_money,
      </if>
      <if test="taxMoney != null">
        tax_money,
      </if>
      <if test="totalTaxMoney != null">
        total_tax_money,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="cardCode != null">
        card_code,
      </if>
      <if test="feeMoney != null">
        fee_money,
      </if>
      <if test="beforeWithdrawMoney != null">
        before_withdraw_money,
      </if>
      <if test="afterWithdrawMoney != null">
        after_withdraw_money,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="certificateType != null">
        certificate_type,
      </if>
      <if test="certificateNo != null">
        certificate_no,
      </if>
      <if test="ldCode != null">
        ld_code,
      </if>
      <if test="ldName != null">
        ld_name,
      </if>
      <if test="afterTaxMoney != null">
        after_tax_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        #{zid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
      <if test="payOrderCode != null">
        #{payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="memberCode != null">
        #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="withdrawMoney != null">
        #{withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="taxMoney != null">
        #{taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalTaxMoney != null">
        #{totalTaxMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="cardCode != null">
        #{cardCode,jdbcType=VARCHAR},
      </if>
      <if test="feeMoney != null">
        #{feeMoney,jdbcType=DECIMAL},
      </if>
      <if test="beforeWithdrawMoney != null">
        #{beforeWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="afterWithdrawMoney != null">
        #{afterWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=CHAR},
      </if>
      <if test="certificateType != null">
        #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNo != null">
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="ldCode != null">
        #{ldCode,jdbcType=VARCHAR},
      </if>
      <if test="ldName != null">
        #{ldName,jdbcType=VARCHAR},
      </if>
      <if test="afterTaxMoney != null">
        #{afterTaxMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from gc_pay_order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_pay_order_info
    <set>
      <if test="record.zid != null">
        zid = #{record.zid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=CHAR},
      </if>
      <if test="record.payOrderCode != null">
        pay_order_code = #{record.payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCode != null">
        member_code = #{record.memberCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payMoney != null">
        pay_money = #{record.payMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawMoney != null">
        withdraw_money = #{record.withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.taxMoney != null">
        tax_money = #{record.taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.totalTaxMoney != null">
        total_tax_money = #{record.totalTaxMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=CHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardCode != null">
        card_code = #{record.cardCode,jdbcType=VARCHAR},
      </if>
      <if test="record.feeMoney != null">
        fee_money = #{record.feeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.beforeWithdrawMoney != null">
        before_withdraw_money = #{record.beforeWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.afterWithdrawMoney != null">
        after_withdraw_money = #{record.afterWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=CHAR},
      </if>
      <if test="record.certificateType != null">
        certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNo != null">
        certificate_no = #{record.certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.ldCode != null">
        ld_code = #{record.ldCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ldName != null">
        ld_name = #{record.ldName,jdbcType=VARCHAR},
      </if>
      <if test="record.afterTaxMoney != null">
        after_tax_money = #{record.afterTaxMoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_pay_order_info
    set zid = #{record.zid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=CHAR},
      pay_order_code = #{record.payOrderCode,jdbcType=VARCHAR},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      member_code = #{record.memberCode,jdbcType=VARCHAR},
      pay_money = #{record.payMoney,jdbcType=DECIMAL},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=VARCHAR},
      withdraw_money = #{record.withdrawMoney,jdbcType=DECIMAL},
      tax_money = #{record.taxMoney,jdbcType=DECIMAL},
      total_tax_money = #{record.totalTaxMoney,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      card_code = #{record.cardCode,jdbcType=VARCHAR},
      fee_money = #{record.feeMoney,jdbcType=DECIMAL},
      before_withdraw_money = #{record.beforeWithdrawMoney,jdbcType=DECIMAL},
      after_withdraw_money = #{record.afterWithdrawMoney,jdbcType=DECIMAL},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      audit_time = #{record.auditTime,jdbcType=CHAR},
      certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      certificate_no = #{record.certificateNo,jdbcType=VARCHAR},
      ld_code = #{record.ldCode,jdbcType=VARCHAR},
      ld_name = #{record.ldName,jdbcType=VARCHAR},
      after_tax_money = #{record.afterTaxMoney,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_pay_order_info
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=CHAR},
      </if>
      <if test="payOrderCode != null">
        pay_order_code = #{payOrderCode,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="memberCode != null">
        member_code = #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        pay_money = #{payMoney,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="withdrawMoney != null">
        withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="taxMoney != null">
        tax_money = #{taxMoney,jdbcType=DECIMAL},
      </if>
      <if test="totalTaxMoney != null">
        total_tax_money = #{totalTaxMoney,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="cardCode != null">
        card_code = #{cardCode,jdbcType=VARCHAR},
      </if>
      <if test="feeMoney != null">
        fee_money = #{feeMoney,jdbcType=DECIMAL},
      </if>
      <if test="beforeWithdrawMoney != null">
        before_withdraw_money = #{beforeWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="afterWithdrawMoney != null">
        after_withdraw_money = #{afterWithdrawMoney,jdbcType=DECIMAL},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=CHAR},
      </if>
      <if test="certificateType != null">
        certificate_type = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNo != null">
        certificate_no = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="ldCode != null">
        ld_code = #{ldCode,jdbcType=VARCHAR},
      </if>
      <if test="ldName != null">
        ld_name = #{ldName,jdbcType=VARCHAR},
      </if>
      <if test="afterTaxMoney != null">
        after_tax_money = #{afterTaxMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where zid = #{zid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmall.dborm.txmodel.groupcenter.GcPayOrderInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_pay_order_info
    set uid = #{uid,jdbcType=CHAR},
      pay_order_code = #{payOrderCode,jdbcType=VARCHAR},
      account_code = #{accountCode,jdbcType=VARCHAR},
      member_code = #{memberCode,jdbcType=VARCHAR},
      pay_money = #{payMoney,jdbcType=DECIMAL},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      withdraw_money = #{withdrawMoney,jdbcType=DECIMAL},
      tax_money = #{taxMoney,jdbcType=DECIMAL},
      total_tax_money = #{totalTaxMoney,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      card_code = #{cardCode,jdbcType=VARCHAR},
      fee_money = #{feeMoney,jdbcType=DECIMAL},
      before_withdraw_money = #{beforeWithdrawMoney,jdbcType=DECIMAL},
      after_withdraw_money = #{afterWithdrawMoney,jdbcType=DECIMAL},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      audit_time = #{auditTime,jdbcType=CHAR},
      certificate_type = #{certificateType,jdbcType=VARCHAR},
      certificate_no = #{certificateNo,jdbcType=VARCHAR},
      ld_code = #{ldCode,jdbcType=VARCHAR},
      ld_name = #{ldName,jdbcType=VARCHAR},
      after_tax_money = #{afterTaxMoney,jdbcType=DECIMAL}
    where zid = #{zid,jdbcType=INTEGER}
  </update>
</mapper>