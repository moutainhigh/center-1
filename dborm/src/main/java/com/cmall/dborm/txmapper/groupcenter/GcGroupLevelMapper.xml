<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmall.dborm.txmapper.groupcenter.GcGroupLevelMapper">
  <resultMap id="BaseResultMap" type="com.cmall.dborm.txmodel.groupcenter.GcGroupLevel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="zid" jdbcType="INTEGER" property="zid" />
    <result column="uid" jdbcType="CHAR" property="uid" />
    <result column="level_code" jdbcType="VARCHAR" property="levelCode" />
    <result column="level_name" jdbcType="VARCHAR" property="levelName" />
    <result column="manage_code" jdbcType="VARCHAR" property="manageCode" />
    <result column="scale_reckon" jdbcType="DECIMAL" property="scaleReckon" />
    <result column="upgrade_members" jdbcType="INTEGER" property="upgradeMembers" />
    <result column="upgrade_consume" jdbcType="DECIMAL" property="upgradeConsume" />
    <result column="level_sort" jdbcType="INTEGER" property="levelSort" />
    <result column="flag_enable" jdbcType="INTEGER" property="flagEnable" />
    <result column="level_type" jdbcType="VARCHAR" property="levelType" />
    <result column="deep_consume" jdbcType="INTEGER" property="deepConsume" />
    <result column="deep_reckon" jdbcType="INTEGER" property="deepReckon" />
    <result column="next_level" jdbcType="VARCHAR" property="nextLevel" />
    <result column="flag_fall" jdbcType="INTEGER" property="flagFall" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    zid, uid, level_code, level_name, manage_code, scale_reckon, upgrade_members, upgrade_consume, 
    level_sort, flag_enable, level_type, deep_consume, deep_reckon, next_level, flag_fall
  </sql>
  <select id="selectByExample" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gc_group_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from gc_group_level
    where zid = #{zid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gc_group_level
    where zid = #{zid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevelExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gc_group_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gc_group_level (zid, uid, level_code, 
      level_name, manage_code, scale_reckon, 
      upgrade_members, upgrade_consume, level_sort, 
      flag_enable, level_type, deep_consume, 
      deep_reckon, next_level, flag_fall
      )
    values (#{zid,jdbcType=INTEGER}, #{uid,jdbcType=CHAR}, #{levelCode,jdbcType=VARCHAR}, 
      #{levelName,jdbcType=VARCHAR}, #{manageCode,jdbcType=VARCHAR}, #{scaleReckon,jdbcType=DECIMAL}, 
      #{upgradeMembers,jdbcType=INTEGER}, #{upgradeConsume,jdbcType=DECIMAL}, #{levelSort,jdbcType=INTEGER}, 
      #{flagEnable,jdbcType=INTEGER}, #{levelType,jdbcType=VARCHAR}, #{deepConsume,jdbcType=INTEGER}, 
      #{deepReckon,jdbcType=INTEGER}, #{nextLevel,jdbcType=VARCHAR}, #{flagFall,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gc_group_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        zid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="levelCode != null">
        level_code,
      </if>
      <if test="levelName != null">
        level_name,
      </if>
      <if test="manageCode != null">
        manage_code,
      </if>
      <if test="scaleReckon != null">
        scale_reckon,
      </if>
      <if test="upgradeMembers != null">
        upgrade_members,
      </if>
      <if test="upgradeConsume != null">
        upgrade_consume,
      </if>
      <if test="levelSort != null">
        level_sort,
      </if>
      <if test="flagEnable != null">
        flag_enable,
      </if>
      <if test="levelType != null">
        level_type,
      </if>
      <if test="deepConsume != null">
        deep_consume,
      </if>
      <if test="deepReckon != null">
        deep_reckon,
      </if>
      <if test="nextLevel != null">
        next_level,
      </if>
      <if test="flagFall != null">
        flag_fall,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        #{zid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
      <if test="levelCode != null">
        #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null">
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="manageCode != null">
        #{manageCode,jdbcType=VARCHAR},
      </if>
      <if test="scaleReckon != null">
        #{scaleReckon,jdbcType=DECIMAL},
      </if>
      <if test="upgradeMembers != null">
        #{upgradeMembers,jdbcType=INTEGER},
      </if>
      <if test="upgradeConsume != null">
        #{upgradeConsume,jdbcType=DECIMAL},
      </if>
      <if test="levelSort != null">
        #{levelSort,jdbcType=INTEGER},
      </if>
      <if test="flagEnable != null">
        #{flagEnable,jdbcType=INTEGER},
      </if>
      <if test="levelType != null">
        #{levelType,jdbcType=VARCHAR},
      </if>
      <if test="deepConsume != null">
        #{deepConsume,jdbcType=INTEGER},
      </if>
      <if test="deepReckon != null">
        #{deepReckon,jdbcType=INTEGER},
      </if>
      <if test="nextLevel != null">
        #{nextLevel,jdbcType=VARCHAR},
      </if>
      <if test="flagFall != null">
        #{flagFall,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevelExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from gc_group_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_group_level
    <set>
      <if test="record.zid != null">
        zid = #{record.zid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=CHAR},
      </if>
      <if test="record.levelCode != null">
        level_code = #{record.levelCode,jdbcType=VARCHAR},
      </if>
      <if test="record.levelName != null">
        level_name = #{record.levelName,jdbcType=VARCHAR},
      </if>
      <if test="record.manageCode != null">
        manage_code = #{record.manageCode,jdbcType=VARCHAR},
      </if>
      <if test="record.scaleReckon != null">
        scale_reckon = #{record.scaleReckon,jdbcType=DECIMAL},
      </if>
      <if test="record.upgradeMembers != null">
        upgrade_members = #{record.upgradeMembers,jdbcType=INTEGER},
      </if>
      <if test="record.upgradeConsume != null">
        upgrade_consume = #{record.upgradeConsume,jdbcType=DECIMAL},
      </if>
      <if test="record.levelSort != null">
        level_sort = #{record.levelSort,jdbcType=INTEGER},
      </if>
      <if test="record.flagEnable != null">
        flag_enable = #{record.flagEnable,jdbcType=INTEGER},
      </if>
      <if test="record.levelType != null">
        level_type = #{record.levelType,jdbcType=VARCHAR},
      </if>
      <if test="record.deepConsume != null">
        deep_consume = #{record.deepConsume,jdbcType=INTEGER},
      </if>
      <if test="record.deepReckon != null">
        deep_reckon = #{record.deepReckon,jdbcType=INTEGER},
      </if>
      <if test="record.nextLevel != null">
        next_level = #{record.nextLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.flagFall != null">
        flag_fall = #{record.flagFall,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_group_level
    set zid = #{record.zid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=CHAR},
      level_code = #{record.levelCode,jdbcType=VARCHAR},
      level_name = #{record.levelName,jdbcType=VARCHAR},
      manage_code = #{record.manageCode,jdbcType=VARCHAR},
      scale_reckon = #{record.scaleReckon,jdbcType=DECIMAL},
      upgrade_members = #{record.upgradeMembers,jdbcType=INTEGER},
      upgrade_consume = #{record.upgradeConsume,jdbcType=DECIMAL},
      level_sort = #{record.levelSort,jdbcType=INTEGER},
      flag_enable = #{record.flagEnable,jdbcType=INTEGER},
      level_type = #{record.levelType,jdbcType=VARCHAR},
      deep_consume = #{record.deepConsume,jdbcType=INTEGER},
      deep_reckon = #{record.deepReckon,jdbcType=INTEGER},
      next_level = #{record.nextLevel,jdbcType=VARCHAR},
      flag_fall = #{record.flagFall,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_group_level
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=CHAR},
      </if>
      <if test="levelCode != null">
        level_code = #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="levelName != null">
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="manageCode != null">
        manage_code = #{manageCode,jdbcType=VARCHAR},
      </if>
      <if test="scaleReckon != null">
        scale_reckon = #{scaleReckon,jdbcType=DECIMAL},
      </if>
      <if test="upgradeMembers != null">
        upgrade_members = #{upgradeMembers,jdbcType=INTEGER},
      </if>
      <if test="upgradeConsume != null">
        upgrade_consume = #{upgradeConsume,jdbcType=DECIMAL},
      </if>
      <if test="levelSort != null">
        level_sort = #{levelSort,jdbcType=INTEGER},
      </if>
      <if test="flagEnable != null">
        flag_enable = #{flagEnable,jdbcType=INTEGER},
      </if>
      <if test="levelType != null">
        level_type = #{levelType,jdbcType=VARCHAR},
      </if>
      <if test="deepConsume != null">
        deep_consume = #{deepConsume,jdbcType=INTEGER},
      </if>
      <if test="deepReckon != null">
        deep_reckon = #{deepReckon,jdbcType=INTEGER},
      </if>
      <if test="nextLevel != null">
        next_level = #{nextLevel,jdbcType=VARCHAR},
      </if>
      <if test="flagFall != null">
        flag_fall = #{flagFall,jdbcType=INTEGER},
      </if>
    </set>
    where zid = #{zid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmall.dborm.txmodel.groupcenter.GcGroupLevel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gc_group_level
    set uid = #{uid,jdbcType=CHAR},
      level_code = #{levelCode,jdbcType=VARCHAR},
      level_name = #{levelName,jdbcType=VARCHAR},
      manage_code = #{manageCode,jdbcType=VARCHAR},
      scale_reckon = #{scaleReckon,jdbcType=DECIMAL},
      upgrade_members = #{upgradeMembers,jdbcType=INTEGER},
      upgrade_consume = #{upgradeConsume,jdbcType=DECIMAL},
      level_sort = #{levelSort,jdbcType=INTEGER},
      flag_enable = #{flagEnable,jdbcType=INTEGER},
      level_type = #{levelType,jdbcType=VARCHAR},
      deep_consume = #{deepConsume,jdbcType=INTEGER},
      deep_reckon = #{deepReckon,jdbcType=INTEGER},
      next_level = #{nextLevel,jdbcType=VARCHAR},
      flag_fall = #{flagFall,jdbcType=INTEGER}
    where zid = #{zid,jdbcType=INTEGER}
  </update>
</mapper>