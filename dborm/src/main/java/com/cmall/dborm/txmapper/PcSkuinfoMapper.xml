<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmall.dborm.txmapper.PcSkuinfoMapper">
  <resultMap id="BaseResultMap" type="com.cmall.dborm.txmodel.PcSkuinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="zid" jdbcType="INTEGER" property="zid" />
    <result column="uid" jdbcType="CHAR" property="uid" />
    <result column="sku_code_old" jdbcType="VARCHAR" property="skuCodeOld" />
    <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
    <result column="stock_num" jdbcType="DECIMAL" property="stockNum" />
    <result column="sku_key" jdbcType="VARCHAR" property="skuKey" />
    <result column="sku_keyvalue" jdbcType="VARCHAR" property="skuKeyvalue" />
    <result column="sku_picurl" jdbcType="VARCHAR" property="skuPicurl" />
    <result column="sell_productcode" jdbcType="VARCHAR" property="sellProductcode" />
    <result column="seller_code" jdbcType="VARCHAR" property="sellerCode" />
    <result column="security_stock_num" jdbcType="DECIMAL" property="securityStockNum" />
    <result column="product_code_old" jdbcType="VARCHAR" property="productCodeOld" />
    <result column="qrcode_link" jdbcType="VARCHAR" property="qrcodeLink" />
    <result column="sell_count" jdbcType="INTEGER" property="sellCount" />
    <result column="sale_yn" jdbcType="VARCHAR" property="saleYn" />
    <result column="flag_enable" jdbcType="INTEGER" property="flagEnable" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="mini_order" jdbcType="INTEGER" property="miniOrder" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cmall.dborm.txmodel.PcSkuinfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="sku_name" jdbcType="LONGVARCHAR" property="skuName" />
    <result column="sku_adv" jdbcType="LONGVARCHAR" property="skuAdv" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    zid, uid, sku_code_old, sku_code, product_code, sell_price, market_price, cost_price, 
    stock_num, sku_key, sku_keyvalue, sku_picurl, sell_productcode, seller_code, security_stock_num, 
    product_code_old, qrcode_link, sell_count, sale_yn, flag_enable, barcode, mini_order
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    sku_name, sku_adv
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cmall.dborm.txmodel.PcSkuinfoExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pc_skuinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cmall.dborm.txmodel.PcSkuinfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pc_skuinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pc_skuinfo
    where zid = #{zid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pc_skuinfo
    where zid = #{zid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cmall.dborm.txmodel.PcSkuinfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pc_skuinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cmall.dborm.txmodel.PcSkuinfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pc_skuinfo (zid, uid, sku_code_old, 
      sku_code, product_code, sell_price, 
      market_price, cost_price, stock_num, 
      sku_key, sku_keyvalue, sku_picurl, 
      sell_productcode, seller_code, security_stock_num, 
      product_code_old, qrcode_link, sell_count, 
      sale_yn, flag_enable, barcode, 
      mini_order, sku_name, sku_adv
      )
    values (#{zid,jdbcType=INTEGER}, #{uid,jdbcType=CHAR}, #{skuCodeOld,jdbcType=VARCHAR}, 
      #{skuCode,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, #{sellPrice,jdbcType=DECIMAL}, 
      #{marketPrice,jdbcType=DECIMAL}, #{costPrice,jdbcType=DECIMAL}, #{stockNum,jdbcType=DECIMAL}, 
      #{skuKey,jdbcType=VARCHAR}, #{skuKeyvalue,jdbcType=VARCHAR}, #{skuPicurl,jdbcType=VARCHAR}, 
      #{sellProductcode,jdbcType=VARCHAR}, #{sellerCode,jdbcType=VARCHAR}, #{securityStockNum,jdbcType=DECIMAL}, 
      #{productCodeOld,jdbcType=VARCHAR}, #{qrcodeLink,jdbcType=VARCHAR}, #{sellCount,jdbcType=INTEGER}, 
      #{saleYn,jdbcType=VARCHAR}, #{flagEnable,jdbcType=INTEGER}, #{barcode,jdbcType=VARCHAR}, 
      #{miniOrder,jdbcType=INTEGER}, #{skuName,jdbcType=LONGVARCHAR}, #{skuAdv,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cmall.dborm.txmodel.PcSkuinfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into pc_skuinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        zid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="skuCodeOld != null">
        sku_code_old,
      </if>
      <if test="skuCode != null">
        sku_code,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="skuKey != null">
        sku_key,
      </if>
      <if test="skuKeyvalue != null">
        sku_keyvalue,
      </if>
      <if test="skuPicurl != null">
        sku_picurl,
      </if>
      <if test="sellProductcode != null">
        sell_productcode,
      </if>
      <if test="sellerCode != null">
        seller_code,
      </if>
      <if test="securityStockNum != null">
        security_stock_num,
      </if>
      <if test="productCodeOld != null">
        product_code_old,
      </if>
      <if test="qrcodeLink != null">
        qrcode_link,
      </if>
      <if test="sellCount != null">
        sell_count,
      </if>
      <if test="saleYn != null">
        sale_yn,
      </if>
      <if test="flagEnable != null">
        flag_enable,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="miniOrder != null">
        mini_order,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="skuAdv != null">
        sku_adv,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="zid != null">
        #{zid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
      <if test="skuCodeOld != null">
        #{skuCodeOld,jdbcType=VARCHAR},
      </if>
      <if test="skuCode != null">
        #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=DECIMAL},
      </if>
      <if test="skuKey != null">
        #{skuKey,jdbcType=VARCHAR},
      </if>
      <if test="skuKeyvalue != null">
        #{skuKeyvalue,jdbcType=VARCHAR},
      </if>
      <if test="skuPicurl != null">
        #{skuPicurl,jdbcType=VARCHAR},
      </if>
      <if test="sellProductcode != null">
        #{sellProductcode,jdbcType=VARCHAR},
      </if>
      <if test="sellerCode != null">
        #{sellerCode,jdbcType=VARCHAR},
      </if>
      <if test="securityStockNum != null">
        #{securityStockNum,jdbcType=DECIMAL},
      </if>
      <if test="productCodeOld != null">
        #{productCodeOld,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeLink != null">
        #{qrcodeLink,jdbcType=VARCHAR},
      </if>
      <if test="sellCount != null">
        #{sellCount,jdbcType=INTEGER},
      </if>
      <if test="saleYn != null">
        #{saleYn,jdbcType=VARCHAR},
      </if>
      <if test="flagEnable != null">
        #{flagEnable,jdbcType=INTEGER},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="miniOrder != null">
        #{miniOrder,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=LONGVARCHAR},
      </if>
      <if test="skuAdv != null">
        #{skuAdv,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cmall.dborm.txmodel.PcSkuinfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from pc_skuinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_skuinfo
    <set>
      <if test="record.zid != null">
        zid = #{record.zid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=CHAR},
      </if>
      <if test="record.skuCodeOld != null">
        sku_code_old = #{record.skuCodeOld,jdbcType=VARCHAR},
      </if>
      <if test="record.skuCode != null">
        sku_code = #{record.skuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null">
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.costPrice != null">
        cost_price = #{record.costPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=DECIMAL},
      </if>
      <if test="record.skuKey != null">
        sku_key = #{record.skuKey,jdbcType=VARCHAR},
      </if>
      <if test="record.skuKeyvalue != null">
        sku_keyvalue = #{record.skuKeyvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.skuPicurl != null">
        sku_picurl = #{record.skuPicurl,jdbcType=VARCHAR},
      </if>
      <if test="record.sellProductcode != null">
        sell_productcode = #{record.sellProductcode,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerCode != null">
        seller_code = #{record.sellerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.securityStockNum != null">
        security_stock_num = #{record.securityStockNum,jdbcType=DECIMAL},
      </if>
      <if test="record.productCodeOld != null">
        product_code_old = #{record.productCodeOld,jdbcType=VARCHAR},
      </if>
      <if test="record.qrcodeLink != null">
        qrcode_link = #{record.qrcodeLink,jdbcType=VARCHAR},
      </if>
      <if test="record.sellCount != null">
        sell_count = #{record.sellCount,jdbcType=INTEGER},
      </if>
      <if test="record.saleYn != null">
        sale_yn = #{record.saleYn,jdbcType=VARCHAR},
      </if>
      <if test="record.flagEnable != null">
        flag_enable = #{record.flagEnable,jdbcType=INTEGER},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.miniOrder != null">
        mini_order = #{record.miniOrder,jdbcType=INTEGER},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.skuAdv != null">
        sku_adv = #{record.skuAdv,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_skuinfo
    set zid = #{record.zid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=CHAR},
      sku_code_old = #{record.skuCodeOld,jdbcType=VARCHAR},
      sku_code = #{record.skuCode,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      stock_num = #{record.stockNum,jdbcType=DECIMAL},
      sku_key = #{record.skuKey,jdbcType=VARCHAR},
      sku_keyvalue = #{record.skuKeyvalue,jdbcType=VARCHAR},
      sku_picurl = #{record.skuPicurl,jdbcType=VARCHAR},
      sell_productcode = #{record.sellProductcode,jdbcType=VARCHAR},
      seller_code = #{record.sellerCode,jdbcType=VARCHAR},
      security_stock_num = #{record.securityStockNum,jdbcType=DECIMAL},
      product_code_old = #{record.productCodeOld,jdbcType=VARCHAR},
      qrcode_link = #{record.qrcodeLink,jdbcType=VARCHAR},
      sell_count = #{record.sellCount,jdbcType=INTEGER},
      sale_yn = #{record.saleYn,jdbcType=VARCHAR},
      flag_enable = #{record.flagEnable,jdbcType=INTEGER},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      mini_order = #{record.miniOrder,jdbcType=INTEGER},
      sku_name = #{record.skuName,jdbcType=LONGVARCHAR},
      sku_adv = #{record.skuAdv,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_skuinfo
    set zid = #{record.zid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=CHAR},
      sku_code_old = #{record.skuCodeOld,jdbcType=VARCHAR},
      sku_code = #{record.skuCode,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      stock_num = #{record.stockNum,jdbcType=DECIMAL},
      sku_key = #{record.skuKey,jdbcType=VARCHAR},
      sku_keyvalue = #{record.skuKeyvalue,jdbcType=VARCHAR},
      sku_picurl = #{record.skuPicurl,jdbcType=VARCHAR},
      sell_productcode = #{record.sellProductcode,jdbcType=VARCHAR},
      seller_code = #{record.sellerCode,jdbcType=VARCHAR},
      security_stock_num = #{record.securityStockNum,jdbcType=DECIMAL},
      product_code_old = #{record.productCodeOld,jdbcType=VARCHAR},
      qrcode_link = #{record.qrcodeLink,jdbcType=VARCHAR},
      sell_count = #{record.sellCount,jdbcType=INTEGER},
      sale_yn = #{record.saleYn,jdbcType=VARCHAR},
      flag_enable = #{record.flagEnable,jdbcType=INTEGER},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      mini_order = #{record.miniOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmall.dborm.txmodel.PcSkuinfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_skuinfo
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=CHAR},
      </if>
      <if test="skuCodeOld != null">
        sku_code_old = #{skuCodeOld,jdbcType=VARCHAR},
      </if>
      <if test="skuCode != null">
        sku_code = #{skuCode,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="costPrice != null">
        cost_price = #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=DECIMAL},
      </if>
      <if test="skuKey != null">
        sku_key = #{skuKey,jdbcType=VARCHAR},
      </if>
      <if test="skuKeyvalue != null">
        sku_keyvalue = #{skuKeyvalue,jdbcType=VARCHAR},
      </if>
      <if test="skuPicurl != null">
        sku_picurl = #{skuPicurl,jdbcType=VARCHAR},
      </if>
      <if test="sellProductcode != null">
        sell_productcode = #{sellProductcode,jdbcType=VARCHAR},
      </if>
      <if test="sellerCode != null">
        seller_code = #{sellerCode,jdbcType=VARCHAR},
      </if>
      <if test="securityStockNum != null">
        security_stock_num = #{securityStockNum,jdbcType=DECIMAL},
      </if>
      <if test="productCodeOld != null">
        product_code_old = #{productCodeOld,jdbcType=VARCHAR},
      </if>
      <if test="qrcodeLink != null">
        qrcode_link = #{qrcodeLink,jdbcType=VARCHAR},
      </if>
      <if test="sellCount != null">
        sell_count = #{sellCount,jdbcType=INTEGER},
      </if>
      <if test="saleYn != null">
        sale_yn = #{saleYn,jdbcType=VARCHAR},
      </if>
      <if test="flagEnable != null">
        flag_enable = #{flagEnable,jdbcType=INTEGER},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="miniOrder != null">
        mini_order = #{miniOrder,jdbcType=INTEGER},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=LONGVARCHAR},
      </if>
      <if test="skuAdv != null">
        sku_adv = #{skuAdv,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where zid = #{zid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cmall.dborm.txmodel.PcSkuinfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_skuinfo
    set uid = #{uid,jdbcType=CHAR},
      sku_code_old = #{skuCodeOld,jdbcType=VARCHAR},
      sku_code = #{skuCode,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      stock_num = #{stockNum,jdbcType=DECIMAL},
      sku_key = #{skuKey,jdbcType=VARCHAR},
      sku_keyvalue = #{skuKeyvalue,jdbcType=VARCHAR},
      sku_picurl = #{skuPicurl,jdbcType=VARCHAR},
      sell_productcode = #{sellProductcode,jdbcType=VARCHAR},
      seller_code = #{sellerCode,jdbcType=VARCHAR},
      security_stock_num = #{securityStockNum,jdbcType=DECIMAL},
      product_code_old = #{productCodeOld,jdbcType=VARCHAR},
      qrcode_link = #{qrcodeLink,jdbcType=VARCHAR},
      sell_count = #{sellCount,jdbcType=INTEGER},
      sale_yn = #{saleYn,jdbcType=VARCHAR},
      flag_enable = #{flagEnable,jdbcType=INTEGER},
      barcode = #{barcode,jdbcType=VARCHAR},
      mini_order = #{miniOrder,jdbcType=INTEGER},
      sku_name = #{skuName,jdbcType=LONGVARCHAR},
      sku_adv = #{skuAdv,jdbcType=LONGVARCHAR}
    where zid = #{zid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmall.dborm.txmodel.PcSkuinfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pc_skuinfo
    set uid = #{uid,jdbcType=CHAR},
      sku_code_old = #{skuCodeOld,jdbcType=VARCHAR},
      sku_code = #{skuCode,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      stock_num = #{stockNum,jdbcType=DECIMAL},
      sku_key = #{skuKey,jdbcType=VARCHAR},
      sku_keyvalue = #{skuKeyvalue,jdbcType=VARCHAR},
      sku_picurl = #{skuPicurl,jdbcType=VARCHAR},
      sell_productcode = #{sellProductcode,jdbcType=VARCHAR},
      seller_code = #{sellerCode,jdbcType=VARCHAR},
      security_stock_num = #{securityStockNum,jdbcType=DECIMAL},
      product_code_old = #{productCodeOld,jdbcType=VARCHAR},
      qrcode_link = #{qrcodeLink,jdbcType=VARCHAR},
      sell_count = #{sellCount,jdbcType=INTEGER},
      sale_yn = #{saleYn,jdbcType=VARCHAR},
      flag_enable = #{flagEnable,jdbcType=INTEGER},
      barcode = #{barcode,jdbcType=VARCHAR},
      mini_order = #{miniOrder,jdbcType=INTEGER}
    where zid = #{zid,jdbcType=INTEGER}
  </update>
</mapper>